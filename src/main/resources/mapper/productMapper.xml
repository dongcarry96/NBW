<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finalpj.nbw.product.dao.ProductMapper">

	<select id="getProduct" parameterType="String" resultType="com.finalpj.nbw.product.domain.Product">
		SELECT P_NO, P_TITLE, P_AUTHOR, P_PUBLISHER, P_PUBDATE, P_PRICE, P_IMG,P_DESCRIPTION, P_CATEGORY, P_LIKE, P_REVIEW, P_AVGSCORE 
		FROM TB_PRODUCT WHERE p_no = #{value}
	</select>
	
 	<select id="SelectReviewList" parameterType="String" resultType="review">
		SELECT MEM_ID, RV_CONTENT, RV_SCORE, RV_DATE, P_NO, RV_IMG, RV_IMG2, RV_IMG3, MEM_NICKNAME FROM TB_REVIEW
	</select>
	
	<!-- ===================================== 공통부분 ===================================== -->
	<sql id="criteria">
		<if test="keyword != null">
			like '%'||#{keyword}||'%'
		</if>
	</sql>
	
	<!-- ===================================== 제목 키워드 검색
	사용자가 입력한 키워드가 제목, 작가에 포함되어있는 상품의 제목을 반환================================================= -->
	<select id="selectProductByWord" parameterType="java.util.Map" resultType="map">
		SELECT DISTINCT P_TITLE
		FROM TB_PRODUCT
		WHERE
		P_TITLE <include refid="criteria"/>
		OR
		p_author <include refid="criteria"/>
		ORDER BY P_TITLE ASC
	</select>

	
	<update id="updateLike" parameterType="map">
		UPDATE TB_PRODUCT 
		SET P_LIKE = P_LIKE + #{value}
		WHERE P_NO = #{p_no}
	</update>
	
	<update id="reviewCountUpdate" parameterType="review">
		UPDATE TB_PRODUCT
		SET P_REVIEW = P_REVIEW + 1,
		P_AVGSCORE = (SELECT SUM(RV_SCORE) FROM TB_REVIEW WHERE P_NO = #{p_no}) / (SELECT COUNT(RV_SCORE) FROM TB_REVIEW WHERE P_NO = #{p_no})
		WHERE P_NO = #{p_no}
	</update>
	
	<insert id="reviewInsert" parameterType="review">
  		<choose>
		    <when test="fileSize == 1">
		    	INSERT INTO TB_REVIEW
				(MEM_ID, MEM_NICKNAME, RV_CONTENT, RV_SCORE, RV_DATE, P_NO, RV_IMG)
				VALUES (#{mem_id}, #{mem_nickname}, #{rv_content}, #{rv_score}, SYSDATE, #{p_no}, #{rv_image} )
		    </when>
		    <when test="fileSize == 2">
		    	INSERT INTO TB_REVIEW
				(MEM_ID, MEM_NICKNAME, RV_CONTENT, RV_SCORE, RV_DATE, P_NO, RV_IMG, RV_IMG2)
				VALUES (#{mem_id}, #{mem_nickname}, #{rv_content}, #{rv_score}, SYSDATE, #{p_no}, #{rv_img}, #{rv_image2} )
		    </when>
		    <when test="fileSize == 3">
		    	INSERT INTO TB_REVIEW
				(MEM_ID, MEM_NICKNAME, RV_CONTENT, RV_SCORE, RV_DATE, P_NO, RV_IMG, RV_IMG2, RV_IMG3)
				VALUES (#{mem_id}, #{mem_nickname}, #{rv_content}, #{rv_score}, SYSDATE, #{p_no}, #{rv_img}, #{rv_img2}, #{rv_image3} )
		    </when>
		    <otherwise>
		    	INSERT INTO TB_REVIEW
				(MEM_ID, MEM_NICKNAME, RV_CONTENT, RV_SCORE, RV_DATE, P_NO)
				VALUES (#{mem_id}, #{mem_nickname}, #{rv_content}, #{rv_score}, SYSDATE, #{p_no})
		    </otherwise>
		</choose>
	</insert>
	
	<!-- ================================== 상품 목록 조회 > 페이징 포함 ================================== -->
	<select id="selectProduct"  resultType="product">
		<![CDATA[
		SELECT p_no, p_title, p_author, p_img, p_publisher,  p_pubdate ,P_CATEGORY, p_description, p_price, p_like
			FROM (
				  SELECT rownum AS rn, p_no, p_title, p_author, p_img, p_publisher, p_pubdate, p_category , p_description, p_price, p_like
				  FROM TB_PRODUCT
				  where (P_TITLE
	  	]]>
		<include refid="criteria"/>
		OR
		P_AUTHOR <include refid="criteria"/>)
		<choose>
			<when test ='type == "C" '>
				AND P_CATEGORY = #{p_category}
			</when>
		</choose>
		<![CDATA[
					AND
				      rownum <= #{pageNum} * #{amount}
			  	)
		WHERE  rn >(#{pageNum}-1) * #{amount}
			]]>
		ORDER BY P_PUBDATE DESC
	</select>

	<!--  ============================== 검색된 게시물 총 개수 ==================================	-->
	<select id="selectTotalProduct" resultType="int">
		SELECT count(*)
		FROM tb_product
		WHERE
		(P_TITLE	<include refid="criteria"/>
		OR
		P_AUTHOR <include refid="criteria"/>)
		<choose>
			<when test ='type == "C" '>
				AND P_CATEGORY = #{p_category}
			</when>
		</choose>
		AND
		P_NO > 0
	</select>

	<!--  ============================== 카테고리로 상품 검색 ==================================	-->
	<select id="selectProductCategory" resultType="String">
		SELECT DISTINCT p_category as categoryCode FROM TB_PRODUCT
		WHERE
		P_TITLE <include refid="criteria"/>
		OR
		P_AUTHOR <include refid="criteria"/>
	</select>

	<!--  ========================== 키워드 검색 결과 조회된 카테고리의 개수 ==============================	-->

	<select id="selectProductCateInfo"  resultType="categoryFilter">
		SELECT DISTINCT count(*) as categoryCount
		FROM (
		SELECT *
		FROM TB_PRODUCT
		WHERE

		(
		P_TITLE <include refid="criteria"/>
		OR
		P_AUTHOR <include refid="criteria"/>
		)
		AND
		P_CATEGORY = #{categoryCode}
		)
	</select>
	
</mapper>