<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finalpj.nbw.product.dao.ProductMapper">

	<select id="getProduct" parameterType="String" resultType="com.finalpj.nbw.product.domain.Product">
		SELECT * FROM tb_PRODUCT WHERE p_no = #{value}
	</select>
	<!-- ===================================== 상품 등록 ===================================== -->
	<insert id="insertProduct" parameterType="product">
		INSERT INTO TB_PRODUCT (
								 P_NO
							   , P_TITLE
							   , P_AUTHOR
							   , P_IMG
							   , P_PUBLISHER
							   , P_PUBDATE
							   , P_PRICE
							   , P_DESCRIPTION
							   , P_CATEGORY
							   , P_COUNT
		)
		VALUES (
				   SEQ_P_NO.nextval
				   , #{p_title}
				   , #{p_author}
				   , #{p_img}
				   , #{p_publisher}
				   , sysdate
				   , #{p_price}
				   , #{p_description}
				   , #{p_category}
				   , #{p_count}
				   )
	</insert>
	
	<!-- ===================================== 검색 공통부분 ===================================== -->
	<sql id="criteria">
		<if test="keyword != null">
			like '%'||#{keyword}||'%'
		</if>
	</sql>
	
	<!-- ===================================== 제목 키워드 검색
	사용자가 입력한 키워드가 제목, 작가에 포함되어있는 상품의 제목을 반환================================================= -->
	<select id="selectProductByWord"  resultType="java.util.List">
		SELECT DISTINCT *
		FROM TB_PRODUCT
		WHERE
		P_TITLE <include refid="criteria"/>
		OR
		p_author <include refid="criteria"/>
		ORDER BY P_TITLE ASC
	</select>

	
	<update id="updateLike" parameterType="map">
		UPDATE TB_PRODUCT
		SET P_LIKE = P_LIKE + #{value}
		WHERE P_NO = #{p_no}
	</update>
	
	<update id="reviewCountUpdate" parameterType="review">
		UPDATE TB_PRODUCT
		SET P_REVIEW = P_REVIEW + 1
		WHERE P_NO = #{p_no}
	</update>
	
	<insert id="reviewInsert" parameterType="review">
  		<choose>
		    <when test="fileSize == 1">
		    	INSERT INTO TB_REVIEW
				(MEM_ID, RV_CONTENT, RV_SCORE, RV_DATE, P_NO, RV_IMG)
				VALUES (#{mem_id}, #{rv_content}, #{rv_score}, SYSDATE, #{p_no}, #{rv_img} )
		    </when>
		    <when test="fileSize == 2">
		    	INSERT INTO TB_REVIEW
				(MEM_ID, RV_CONTENT, RV_SCORE, RV_DATE, P_NO, RV_IMG, RV_IMG2)
				VALUES (#{mem_id}, #{rv_content}, #{rv_score}, SYSDATE, #{p_no}, #{rv_img}, #{rv_img2} )
		    </when>
		    <when test="fileSize == 3">
		    	INSERT INTO TB_REVIEW
				(MEM_ID, RV_CONTENT, RV_SCORE, RV_DATE, P_NO, RV_IMG, RV_IMG2, RV_IMG3)
				VALUES (#{mem_id}, #{rv_content}, #{rv_score}, SYSDATE, #{p_no}, #{rv_img}, #{rv_img2}, #{rv_img3} )
		    </when>
		    <otherwise>
		    	INSERT INTO TB_REVIEW
				(MEM_ID, RV_CONTENT, RV_SCORE, RV_DATE, P_NO)
				VALUES (#{mem_id}, #{rv_content}, #{rv_score}, SYSDATE, #{p_no})
		    </otherwise>
		</choose>
	</insert>
	


	<!-- ================================== 상품 목록 조회 > 페이징 포함 ================================== -->
	<select id="selectProduct"  resultType="product">
		SELECT last.*
			FROM
				  (SELECT rownum AS rn, od.*
				  FROM (
				  				select * from tb_product
				                 <choose>
									<when test ='sort == "recent" '>ORDER BY P_PUBDATE DESC</when>
									<when test ='sort == "sell" '>ORDER BY P_TSELL DESC</when>
									<when test ='sort == "lowerprice" '>ORDER BY Cast(P_PRICE AS INTEGER) ASC</when>
									<when test ='sort == "higherprice" '>ORDER BY Cast(P_PRICE AS INTEGER) DESC</when>
									<when test ='sort == "review" '>ORDER BY P_REVIEW DESC</when>
									<when test ='sort == "like" '>ORDER BY P_LIKE DESC</when>
									<when test ='sort == "score" '>ORDER BY P_AVGSCORE DESC</when>
								</choose>
				                 )od
		<choose>
			<when test="keyword !=null and !keyword.equals('')">
					WHERE (
					P_TITLE <include refid="criteria"/>
					OR
					P_AUTHOR <include refid="criteria"/>
					)
				<if test ='type == "C" '>
					AND P_CATEGORY = #{p_category}
				</if>
			</when>
			<when test ='type == "C" '>
				WHERE P_CATEGORY = #{p_category}
			</when>
		</choose>
			  	) last
		<![CDATA[
		WHERE  rn >(#{pageNum}-1) * #{amount} and rn <= #{pageNum}*#{amount}
			]]>
	</select>

	<!--  ============================== 검색된 게시물 총 개수 ==================================	-->
	<select id="selectTotalProduct" resultType="int">
		SELECT count(*)
		FROM tb_product
		<choose>
			<when test=' keyword !=null and !keyword.equals("")'>  --키워드로만 검색할 경우
				WHERE
				(P_TITLE	<include refid="criteria"/>
				OR
				P_AUTHOR <include refid="criteria"/>)
				<if test ='type == "C" '>
					AND P_CATEGORY = #{p_category}
				</if>
			</when>
			<when test ='type == "C" '> -- 타입으로만 검색할 경우
				WHERE P_CATEGORY = #{p_category}
			</when>
		</choose>
	</select>

	<!--  ============================== 카테고리로 상품 검색 ==================================	-->
	<select id="selectProductCategory" resultType="String">
		SELECT DISTINCT p_category as categoryCode FROM TB_PRODUCT
		    <choose>
				<when test="keyword !=null and !keyword.equals('')">
					WHERE
					P_TITLE <include refid="criteria"/>
					OR
					P_AUTHOR <include refid="criteria"/>
				</when>
				<when test='type="C"'>
					WHERE P_CATEGORY =#{p_category}
				</when>
			</choose>


	</select>

	<!--  ========================== 키워드 검색 결과 조회된 카테고리의 개수 ==============================	-->
	<select id="selectProductCateInfo"  resultType="categoryFilter">
		SELECT DISTINCT count(*) as categoryCount
		FROM (
				SELECT *
				FROM TB_PRODUCT
				<choose>
					<when test="keyword !=null and !keyword.equals('')">
						WHERE
						P_TITLE <include refid="criteria"/>
						OR
						P_AUTHOR <include refid="criteria"/>
					</when>
					<when test='type="C"'>
						WHERE P_CATEGORY =#{p_category}
					</when>
				</choose>
				)
	</select>
</mapper>